# HTTPS CONFIGURATION
server.port: 8443
server.ssl.enabled = true
server.ssl.key-store = keystore.p12
server.ssl.key-store-type = PKCS12
server.ssl.key-alias = tomcat
server.ssl.key-store-password = rent_project
server.tomcat.remote_ip_header=x-your-remote-ip-header
server.tomcat.protocol_header=x-your-protocol-header

# HTTP CONFIGURATION
#server.port = 8080

# Server api path
server.servlet.context-path=/api

# Database
spring.jpa.database = POSTGRESQL
spring.datasource.platform = postgres
spring.datasource.url = jdbc:postgresql://localhost:5432/rent
spring.datasource.username = postgres
spring.datasource.password = root
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql = true
spring.jpa.generate-ddl = true
spring.jpa.hibernate.ddl-auto = create-drop
spring.jpa.hibernate.naming.physical-strategy = org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation = true

# LOGGING LEVELS
spring.output.ansi.enabled=always
logging.level.root=WARN
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=ERROR
logging.level.gr.uoa.di.rent=DEBUG